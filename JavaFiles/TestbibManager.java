// =======================================================
// This file is auto generated by [DataConvertor for Excel Lite] convertor,
// do not edit by youself!
// >>>> by HuMinghua <<<<  Aug 8, 2021 at 6:26:47 PM
// ======================================================

package database;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;
import database.TestbibObjects.Sheet1;

public class TestbibManager {

    private static TestbibManager _sTestbibManager = new TestbibManager();
    private TestbibHelper dbHelper;


    //select Sheet1 list
    private final String SELECT_SHEET1_SQL		         =	"SELECT tITLE, vERSE, lINE FROM Sheet1";


    //Sheet1 Col Index
    private final int	kSHEET1_COL_INDEX_TITLE  = 0;
    private final int	kSHEET1_COL_INDEX_VERSE  = 1;
    private final int	kSHEET1_COL_INDEX_LINE  = 2;

    public static TestbibManager sharedManager() {
        return _sTestbibManager;
    }

    public void init (Context context) {

        try {
            dbHelper = new TestbibHelper(context);
            dbHelper.createDataBase();
        } catch (IOException ioe) {
            throw new Error("Unable to create database");
        }
    }

    public List<Sheet1> loadSheet1s(){

        List<Sheet1> datas = new ArrayList<Sheet1>();
        SQLiteDatabase db = null;
        try {
            db = dbHelper.openDataBaseWithReadOnly();
            Cursor c = db.rawQuery(SELECT_SHEET1_SQL, null);

            while (c.moveToNext()) {
                Sheet1 data = createSheet1Data(c);
                datas.add(data);
            }
            c.close();

        } catch(SQLException sqle) {
            Log.e("sqlerror", sqle.getMessage());
        }
        if (db != null)
            db.close();

        return datas;
    }

    private Sheet1 createSheet1Data(Cursor c) {

        Sheet1 data = new TestbibObjects().new Sheet1();

        if (!c.isNull(kSHEET1_COL_INDEX_TITLE))
            data.setTITLE(c.getString(kSHEET1_COL_INDEX_TITLE));

        if (!c.isNull(kSHEET1_COL_INDEX_VERSE))
            data.setVERSE(c.getString(kSHEET1_COL_INDEX_VERSE));

        if (!c.isNull(kSHEET1_COL_INDEX_LINE))
            data.setLINE(c.getString(kSHEET1_COL_INDEX_LINE));

        return data;
    }

}
